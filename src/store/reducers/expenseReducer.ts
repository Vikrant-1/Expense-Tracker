import {createSlice} from '@reduxjs/toolkit';
import {ExpenseInterface} from '../../types/expenseTypes';

const exps :ExpenseInterface[] = [
  {
    id: 'e1',
    name: 'Groceries Shopping',
    amount: 100.0,
    currencyCode: 'USD',
    description: 'Bought groceries for the week',
    categoryId: 'Food & Dining',
    expenseDate: new Date('2022-01-15').getTime() / 1000,
    createdBy: { id: 'user123', createdAt: Date.now() },
  },
  {
    id: 'e2',
    name: 'Weekend Getaway',
    amount: 150.5,
    currencyCode: 'USD',
    description: 'Expense for a short trip',
    categoryId: 'Travel',
    expenseDate: new Date('2022-01-20').getTime() / 1000,
    createdBy: { id: 'user124', createdAt: Date.now() },
  },
  {
    id: 'e3',
    name: 'Shopping Spree',
    amount: 200.75,
    currencyCode: 'USD',
    description: 'Bought clothes and accessories',
    categoryId: 'Shopping',
    expenseDate: new Date('2022-03-10').getTime() / 1000,
    createdBy: { id: 'user123', createdAt: Date.now() },
  },
  {
    id: 'e4',
    name: 'Gym Membership',
    amount: 80.0,
    currencyCode: 'USD',
    description: 'Monthly gym membership fee',
    categoryId: 'Health & Fitness',
    expenseDate: new Date('2022-04-05').getTime() / 1000,
    createdBy: { id: 'user125', createdAt: Date.now() },
  },
  {
    id: 'e5',
    name: 'Gas Fill-Up',
    amount: 90.0,
    currencyCode: 'USD',
    description: 'Filled gas tank',
    categoryId: 'Transportation',
    expenseDate: new Date('2022-05-25').getTime() / 1000,
    createdBy: { id: 'user123', createdAt: Date.now() },
    updatedBy: { id: 'user126', updatedAt: Date.now() },
  },
  {
    id: 'e6',
    name: 'Movie Night',
    amount: 60.0,
    currencyCode: 'USD',
    description: 'Watched the latest movie',
    categoryId: 'Entertainment',
    expenseDate: new Date('2022-06-10').getTime() / 1000,
    createdBy: { id: 'user127', createdAt: Date.now() },
  },
  {
    id: 'e7',
    name: 'Utility Bill',
    amount: 110.0,
    currencyCode: 'USD',
    description: 'Paid electricity bill',
    categoryId: 'Utilities',
    expenseDate: new Date('2022-07-20').getTime() / 1000,
    createdBy: { id: 'user128', createdAt: Date.now() },
  },
  {
    id: 'e8',
    name: 'Office Supplies',
    amount: 140.0,
    currencyCode: 'USD',
    description: 'Purchased stationary items',
    categoryId: 'Office Supplies',
    expenseDate: new Date('2022-08-15').getTime() / 1000,
    createdBy: { id: 'user123', createdAt: Date.now() },
  },
  {
    id: 'e9',
    name: 'Dinner with Friends',
    amount: 130.0,
    currencyCode: 'USD',
    description: 'Dinner at a restaurant',
    categoryId: 'Food & Dining',
    expenseDate: new Date('2022-09-30').getTime() / 1000,
    createdBy: { id: 'user125', createdAt: Date.now() },
  },
  {
    id: 'e10',
    name: 'Vacation',
    amount: 175.0,
    currencyCode: 'USD',
    description: 'Spent on a vacation trip',
    categoryId: 'Travel',
    expenseDate: new Date('2022-10-01').getTime() / 1000,
    createdBy: { id: 'user124', createdAt: Date.now() },
    groupId: 'grp123',
  },
  {
    id: 'e11',
    name: 'Black Friday Shopping',
    amount: 120.0,
    currencyCode: 'USD',
    description: 'Bought electronics',
    categoryId: 'Shopping',
    expenseDate: new Date('2022-11-20').getTime() / 1000,
    createdBy: { id: 'user126', createdAt: Date.now() },
  },
  {
    id: 'e12',
    name: 'Yoga Classes',
    amount: 210.0,
    currencyCode: 'USD',
    description: 'Enrolled in yoga classes',
    categoryId: 'Health & Fitness',
    expenseDate: new Date('2022-12-05').getTime() / 1000,
    createdBy: { id: 'user123', createdAt: Date.now() },
  },
  {
    id: 'e13',
    name: 'Car Maintenance',
    amount: 100.5,
    currencyCode: 'USD',
    description: 'Serviced car',
    categoryId: 'Transportation',
    expenseDate: new Date('2023-01-18').getTime() / 1000,
    createdBy: { id: 'user124', createdAt: Date.now() },
  },
  {
    id: 'e14',
    name: 'Concert Tickets',
    amount: 95.0,
    currencyCode: 'USD',
    description: 'Attended live concert',
    categoryId: 'Entertainment',
    expenseDate: new Date('2023-02-22').getTime() / 1000,
    createdBy: { id: 'user127', createdAt: Date.now() },
    splitId: 'split123',
  },
  {
    id: 'e15',
    name: 'Internet Bill',
    amount: 80.0,
    currencyCode: 'USD',
    description: 'Paid monthly internet bill',
    categoryId: 'Utilities',
    expenseDate: new Date('2023-03-15').getTime() / 1000,
    createdBy: { id: 'user126', createdAt: Date.now() },
  },
  {
    id: 'e16',
    name: 'Printer Ink',
    amount: 110.0,
    currencyCode: 'USD',
    description: 'Purchased ink cartridges',
    categoryId: 'Office Supplies',
    expenseDate: new Date('2023-04-25').getTime() / 1000,
    createdBy: { id: 'user123', createdAt: Date.now() },
  },
  {
    id: 'e17',
    name: 'Weekend BBQ',
    amount: 160.0,
    currencyCode: 'USD',
    description: 'Hosted a BBQ party',
    categoryId: 'Food & Dining',
    expenseDate: new Date('2023-06-02').getTime() / 1000,
    createdBy: { id: 'user125', createdAt: Date.now() },
  },
  {
    id: 'e18',
    name: 'Road Trip',
    amount: 190.0,
    currencyCode: 'USD',
    description: 'Expense for a long road trip',
    categoryId: 'Travel',
    expenseDate: new Date('2023-06-10').getTime() / 1000,
    createdBy: { id: 'user128', createdAt: Date.now() },
    updatedBy: { id: 'user129', updatedAt: Date.now() },
  },
];

interface ExpenseStateProps {
  expenses: ExpenseInterface[];
}

const initialState: ExpenseStateProps = {
  expenses: exps,
};

const expenseSlice = createSlice({
  name: 'expense',
  initialState: initialState,
  reducers: {},
  extraReducers(builder) {},
});

export default expenseSlice.reducer;
